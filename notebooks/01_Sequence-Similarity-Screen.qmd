---
title: "Sequence Similarity Screen"
editor: visual
author: "Joe Boktor"
date: '2023-01-24'
format: 
  html:
    font-family: helvetica neueu
    page-layout: full
    toc: true
    toc-location: left
    toc-depth: 3
    self-contained: true
    code-fold: true
    code-tools: true
    fig-align: center
bibliography: references.bib
---

## Background

We have selected immune protein targets of interest and assembled a novel microbial protein catalog, globally representing \_\_\_ genomes and \_\_ protein sequences with greater than 5% dissimilarity. Next, we will apply various *in-silico* approaches for screen for both similarity, and binding potential between protein data-sets.

## Objectives

The goal of this notebook will be to implement sequence similarity algorithms between our microbial protein catalog and host immune proteins of interest. We will implement a three-fold approach considering multiple sequence evolution paradigms including

1.  global sequence alignment (Needleman-Wunsch)
2.  local sequence alignment (Smith-Waterman)
3.  motif-centric analysis via profile Hidden Markov Models.

The Needleman-Wunch global sequence alignment approach conducts end-to-end alignment and performs best on highly similar sequences of similar length. In contrast, the Smith-Waterman algorithm conducts local sequence alignment between two sequences pairs and searches for contiguous subsections between the pair. This approach will provide better sensitivity for detecting sequences with conserved subsections in-between insertion and deletion regions.

## Global Sequence Alignment - Needleman-Wunsch

In both global and local sequence alignment we utilize the [BLOSUM62](https://www.nature.com/articles/nbt0804-1035) substitution matrix with an affine gap penalty score, $g = o + e * (l-1)$, where $o$ is the gap initiation penalty, $e$ is the gap extension penalty, and $l$ is the length of the gap. We define $o$ as 5, and $e$ as 0.5. These parameters favor sequence alignments with fewer gaps while minimizing penalties for larger insertion domains in our sequences of interest. The Needleman-Wunsch algorithm is defined as follows. Let $X=x_1,x_2,...x_n$ and $Y=y_1, y_2,... y_m$ equal the sequences of $n$ and $m$ lengths to be aligned. A matrix $D(i,j)$ is indexed by residues and built recursively using the following conditions:

$$
D(i,j) = \max\left\{ 
  \begin{array}{ll}
    D(i-1, j-1) + s(x_i, y_j), \\ 
    D(i-1, j) - g, \\
    D(i, j-1) - g \\
  \end{array}
\right.
$$\

Here $g$ is the gap penalty and , $s(i,j)$ is the similarity score for a pair of residues, provided by the BLOSUM62 substitution matrix.

## Local Sequence Alignment - Smith-Waterman 

The Smith-Waterman algorithm is very similar to the Needleman-Wunch approach with the exception that unmatched residues are provided a value of zero in recursive development of the scoring matrix.

$$
D(i,j) = \max\left\{ 
  \begin{array}{ll}
    D(i-1, j-1) + s(x_i, y_j), \\ 
    D(i-1, j) - g, \\
    D(i, j-1) - g, \\
    0
  \end{array}
\right.
$$

## Profile Hidden Markov Models (HMM)

Profile HMMs are probabilistic models that are useful for identifying shared motifs between a model and a sequence. Models are built using multiple sequence alignments, where they record position-specific probabilities of amino-acid conservation [@embl-ebi].

HMM. Each HMM was built from a multiple sequence alignment generated by MUSCLE (MUltiple Sequence Comparison by Log- Expectation)^[76](https://www.nature.com/articles/s41591-019-0406-6#ref-CR76 "Edgar, R. C. MUSCLE: multiple sequence alignment with high accuracy and high throughput. Nucleic Acids Res. 32, 1792–1797 (2004).")^, containing the respective reference sequences and close homologs identified using PSI-BLAST (Position-Specific Iterative Basic Local Alignment Search Tool)^[77](https://www.nature.com/articles/s41591-019-0406-6#ref-CR77 "Altschul, S. F. et al. Gapped BLAST and PSI-BLAST: a new generation of protein database search programs. Nucleic Acids Res. 25, 3389–3402 (1997).")^. Multiple sequence alignments are available together with the code for this study (<https://github.com/zellerlab/crc_meta>). Then, we screened the IGC metagenomic gene catalog^[30](https://www.nature.com/articles/s41591-019-0406-6#ref-CR30 "Li, J. et al. An integrated catalog of reference genes in the human gut microbiome. Nat. Biotechnol. 32, 834–841 (2014).")^ with each HMM using the HMMER software (v.3.1b2)^[78](https://www.nature.com/articles/s41591-019-0406-6#ref-CR78 "Eddy, S. R. Accelerated profile HMM searches. PLoS Comput. Biol. 7, e1002195 (2011).")^. Genes with an e-value below 1 × 10^−10^ were filtered for uniqueness since in some cases the HMMs

## Analysis
#### Selecting Immune proteins of interest

Analysis setup
```{r}
library(tidyverse)
library(reticulate)
library(magrittr)
library(glue)
library(seqinr)
library(future)
library(future.batchtools)
library(fs)
library(tictoc)
library(listenv)
library(progress)
tmpdir <- "/central/scratch/jbok/tmp"
homedir <- "/central/groups/MazmanianLab/joeB"
wkdir <- glue(
  "{homedir}/",
  "Microbiota-Immunomodulation/Microbiota-Immunomodulation"
)
src_dir <- glue("{wkdir}/notebooks")
source(glue("{src_dir}/R-scripts/helpers_general.R"))
source(glue("{src_dir}/R-scripts/helpers_sequence-screens.R"))
protein_catalogs <- glue("{homedir}/", "Downloads/protein_catalogs")
reticulate::use_condaenv(condaenv = 'pdmbsR',  required = TRUE)
```

https://www.innatedb.com/redirect.do?go=resourcesGeneLists

Immunogenetic Related Information Source (IRIS)
This gene list, of 1,535 immune genes (December 7, 2014), is derived from the IRIS online database of known human defense genes (note that the IRIS database does not seem to be available anymore).
These genes were curated by IRIS from the literature where an immune gene was defined as a complete gene that produces a functional transcript and demonstrates at least one of the following defense characteristics: (i) Known or putative function in innate or adaptive immunity, (ii) Participates in the development or maturation of immune system components (iii) Induced by immunomodulators, (iv) Encodes a protein expressed primarily in immune tissues, (v) Participates in an immune pathway that results in the expression of defense molecules, (vi) Produces a protein that interacts directly with pathogens or their products.View List

Septic Shock Group
This gene list is derived from the Septic Shock group which is a collaboration between ISB, TSRI and Rockefeller University research groups.
The list includes 1,448 genes with potential relevance to macrophage response to microbial stimulation (December 7, 2014). The list combines genes with significant expression changes under stimulation with LPS, and genes coding for proteins known to interact in the TNFa/NF-kB signaling pathway.View List

Immunome Database
Immunology-related genes were collected from research articles, textbooks and electronic information sources. The list contains genes that are directly involved in immunological processes. In addition to clearly defined groups, such as clusters of differentiation (CD) molecules, chemokines and their receptors, other essential genes were included. Genes were included when they are undoubtedly needed for immunity. Immunodeficiency-related genes were taken from the ImmunoDeficiency Resource and IDbases. Proteins that are expressed in nearly all cells were excluded, although their functions may also be needed in immunity related cells and tissues. Only full-length genes were included; thus, the gene segments of immunoglobulins, B and T cell receptors and major histocompatibility complexes (MHCs) were excluded. In the case of signaling molecules, only those involved in immunity-related cascades were included. Altogether, 844 genes were selected for InnateDB (December 7, 2014).

```{r}



```

 
```{r}
gget <- import("gget")
proteins_of_interest <- c("interleukin", "interferons", "TGFB", "TNFA")
keyname_search <- gget$search(proteins_of_interest, "homo_sapiens")
keyname_hits <- keyname_search %>% filter(biotype == "protein_coding") %>% 
  filter(gene_name %in% c("IL1RN", "IL4", "IL6", "IL10", "IL11", "IL13"))

# collect amino acid sequences for each protein using the ensembl_id
gget_seq <- function(ensembl_id,  amino_acid=TRUE){
    seq_results <- gget$seq(ensembl_id, translate = amino_acid)
    return(seq_results[2])
}
keyname_hits %<>% mutate(sequences_aa =  map_chr(ensembl_id, gget_seq))
keyname_hits

saveRDS(keyname_hits, glue("{wkdir}/data/interim/tmp/{Sys.Date()}_gget_proteins-of-interest.rds"))

```


## Methods

All analysis are conducted using R 4.2.0, using the packages specified below. The Needleman-Wunsch and Smith-Waterman algorithm were applied using [emboss](https://anaconda.org/bioconda/emboss) v6.6.0.

Seq. clustering ..

HMM analysis ..

```{r}

sessionInfo()
```
